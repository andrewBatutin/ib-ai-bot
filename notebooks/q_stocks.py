# -*- coding: utf-8 -*-
"""Q_Stocks.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CvtJo4Sb4OFyCTWuFEkMqwxanfUiTt_9
"""

# prompt: import yahoo finance and download datframe for last month for IONQ, RGTI, QMCO, QUBT stocks


import yfinance as yf
import pandas as pd
from datetime import date, timedelta

# Define the tickers
tickers = ['IONQ', 'RGTI', 'QMCO', 'QUBT', 'QBTS']

# Calculate the start and end dates for the last month
today = date.today()
last_month = today - timedelta(days=30)

# Download the data for the specified tickers and date range
data = yf.download(tickers, start=last_month, end=today)

# Print the downloaded data
data



data[('Close', 'IONQ')]
close_prices = data[[('Close', 'IONQ'), ('Close', 'RGTI'), ('Close', 'QMCO'), ('Close', 'QUBT'), ('Close', 'QBTS')]]

normalized_prices = close_prices.div(close_prices.iloc[0])
normalized_prices

"""q_signal = normalized_prices.mean(axis=1)"""

q_signal = normalized_prices.mean(axis=1)

normalized_prices['Q-signal'] = q_signal
normalized_prices


import matplotlib.pyplot as plt

# Assuming you have the 'normalized_prices' DataFrame from the previous step

# Plot the normalized prices
plt.figure(figsize=(12, 6))  # Adjust figure size as needed
for column in normalized_prices.columns[:-1]:  # Exclude the Q-signal column
    plt.plot(normalized_prices.index, normalized_prices[column], label=column)

# Plot the Q-signal
plt.plot(normalized_prices.index, normalized_prices['Q-signal'], label='Q-signal', linewidth=2, color='black')

# Add labels and title
plt.xlabel('Date')
plt.ylabel('Normalized Price')
plt.title('Normalized Stock Prices and Q-signal')

# Add legend
plt.legend()

# Show the plot
plt.grid(True)
plt.show()

